services:
  keycloak:
    image: quay.io/keycloak/keycloak:26.2.4
    container_name: keycloak
    ports:
      - "8080:8080"
    volumes:
      - keycloak-data:/opt/keycloak/data
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_HOSTNAME_URL=https://localhost/auth
      - KC_HTTP_RELATIVE_PATH=/auth
      - KC_HTTP_ENABLED=true
      - KC_PROXY_HEADERS=xforwarded
      - KC_HEALTH_ENABLED=true
    command: start-dev
    networks:
      frontend-network:
        ipv4_address: 192.168.1.2
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "exec 3<>/dev/tcp/127.0.0.1/9000;echo -e \"GET /auth/health/ready HTTP/1.1\r\nHost: localhost:9000\r\nConnection: close\r\n\r\n\" >&3;grep -q \"HTTP/1.1 200 OK\" <&3",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  nextjs:
    build: ./nextjs
    image: nextjs-image:latest
    container_name: nextjs
    ports:
      - "3000:3000"
    depends_on:
      keycloak:
        condition: service_healthy
    environment:
      - NEXTAUTH_URL=https://localhost
      - NEXTAUTH_SECRET=arGEP4i7L+YMLFTpeKCEajLq1yjhc3IfvJrsP/BPZhA=
      - KEYCLOAK_CLIENT_ID=frontend
      - KEYCLOAK_CLIENT_SECRET=FfeuyqDjOkH3g6o0Op9oQm9RR6lbZNTG
      - KEYCLOAK_ISSUER=https://localhost/auth/realms/myrealm
      - KEYCLOAK_INTERNAL_BASE_URL=http://nginx/auth/realms/myrealm
    networks:
      frontend-network:
        ipv4_address: 192.168.1.3
    healthcheck:
      test:
        ["CMD", "node", "-e", "require('http').get('http://localhost:3000')"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  nginx:
    build: ./nginx
    image: nginx-image:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      nextjs:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      frontend-network:
        ipv4_address: 192.168.1.4
    healthcheck:
      test: ["CMD", "curl", "-kf", "https://localhost:443"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

volumes:
  keycloak-data:

networks:
  frontend-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "192.168.1.0/24"
          gateway: "192.168.1.1"
