services:
  keycloak:
    image: quay.io/keycloak/keycloak:${KC_VERSION}
    container_name: keycloak
    volumes:
      - keycloak-data:/opt/keycloak/data
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_HOSTNAME_URL="${URL}${KC_HTTP_RELATIVE_PATH}"
      - KC_HTTP_RELATIVE_PATH=${KC_HTTP_RELATIVE_PATH}
      - KC_HTTP_ENABLED=true
      - KC_PROXY_HEADERS=xforwarded
      - KC_HEALTH_ENABLED=true
    command: start-dev
    networks:
      frontend-network:
        ipv4_address: 192.168.1.2
      backend-network:
        ipv4_address: 192.168.2.2
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "exec 3<>/dev/tcp/127.0.0.1/9000;echo -e \"GET /auth/health/ready HTTP/1.1\r\nHost: localhost:9000\r\nConnection: close\r\n\r\n\" >&3;grep -q \"HTTP/1.1 200 OK\" <&3",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  nextjs:
    build: ./nextjs
    image: nextjs-image:latest
    container_name: nextjs
    depends_on:
      keycloak:
        condition: service_healthy
      backend:
        condition: service_healthy
    secrets:
      - nextauth_secret
      - frontend_secret
    environment:
      - NEXTAUTH_URL=${URL}
      - NEXTAUTH_SECRET=/run/secrets/nextauth_secret
      - KEYCLOAK_CLIENT_ID=frontend
      - KEYCLOAK_CLIENT_SECRET=/run/secrets/frontend_secret
      - KEYCLOAK_ISSUER="${URL}${KC_HTTP_RELATIVE_PATH}/realms/${REALM_NAME}"
      - KEYCLOAK_INTERNAL_BASE_URL="http://nginx${KC_HTTP_RELATIVE_PATH}/realms/${REALM_NAME}"
    networks:
      frontend-network:
        ipv4_address: 192.168.1.3
      backend-network:
        ipv4_address: 192.168.2.3
    healthcheck:
      test:
        ["CMD", "node", "-e", "require('http').get('http://localhost:3000')"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  nginx:
    build: ./nginx
    image: nginx-image:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      keycloak:
        condition: service_healthy
      nextjs:
        condition: service_healthy
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      frontend-network:
        ipv4_address: 192.168.1.4
    healthcheck:
      test: ["CMD", "curl", "-kf", "https://localhost:443"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  backend:
    build: ./backend
    image: backend-image:latest
    container_name: backend
    ports:
      - "3001:3001"
    depends_on:
      keycloak:
        condition: service_healthy
    secrets:
      - backend_secret
    environment:
      - KEYCLOAK_REALM_NAME=${REALM_NAME}
      - KEYCLOAK_BACKEND_INTERNAL_URL="http://keycloak:8080${KC_HTTP_RELATIVE_PATH}"
      - KEYCLOAK_CLIENT_ID=backend
      - KEYCLOAK_CLIENT_SECRET=/run/secrets/backend_secret
    networks:
      backend-network:
        ipv4_address: 192.168.2.4
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:3001/health')",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

secrets:
  nextauth_secret:
    file: ./secrets/nextauth_secret.txt
  frontend_secret:
    file: ./secrets/frontend_secret.txt
  backend_secret:
    file: ./secrets/backend_secret.txt

volumes:
  keycloak-data:

networks:
  frontend-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "192.168.1.0/24"
          gateway: "192.168.1.1"

  backend-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "192.168.2.0/24"
          gateway: "192.168.2.1"
